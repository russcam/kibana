// Generated from ../elasticsearch/modules/lang-painless/src/main/antlr/PainlessLexer.g4 by ANTLR 4.7.3-SNAPSHOT


import { SlashStrategy } from './SlashStrategy';
import { Definition } from './Definition';

import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class PainlessLexer extends Lexer {
	public static readonly WS = 1;
	public static readonly COMMENT = 2;
	public static readonly LBRACK = 3;
	public static readonly RBRACK = 4;
	public static readonly LBRACE = 5;
	public static readonly RBRACE = 6;
	public static readonly LP = 7;
	public static readonly RP = 8;
	public static readonly DOT = 9;
	public static readonly NSDOT = 10;
	public static readonly COMMA = 11;
	public static readonly SEMICOLON = 12;
	public static readonly IF = 13;
	public static readonly IN = 14;
	public static readonly ELSE = 15;
	public static readonly WHILE = 16;
	public static readonly DO = 17;
	public static readonly FOR = 18;
	public static readonly CONTINUE = 19;
	public static readonly BREAK = 20;
	public static readonly RETURN = 21;
	public static readonly NEW = 22;
	public static readonly TRY = 23;
	public static readonly CATCH = 24;
	public static readonly THROW = 25;
	public static readonly THIS = 26;
	public static readonly INSTANCEOF = 27;
	public static readonly BOOLNOT = 28;
	public static readonly BWNOT = 29;
	public static readonly MUL = 30;
	public static readonly DIV = 31;
	public static readonly REM = 32;
	public static readonly ADD = 33;
	public static readonly SUB = 34;
	public static readonly LSH = 35;
	public static readonly RSH = 36;
	public static readonly USH = 37;
	public static readonly LT = 38;
	public static readonly LTE = 39;
	public static readonly GT = 40;
	public static readonly GTE = 41;
	public static readonly EQ = 42;
	public static readonly EQR = 43;
	public static readonly NE = 44;
	public static readonly NER = 45;
	public static readonly BWAND = 46;
	public static readonly XOR = 47;
	public static readonly BWOR = 48;
	public static readonly BOOLAND = 49;
	public static readonly BOOLOR = 50;
	public static readonly COND = 51;
	public static readonly COLON = 52;
	public static readonly ELVIS = 53;
	public static readonly REF = 54;
	public static readonly ARROW = 55;
	public static readonly FIND = 56;
	public static readonly MATCH = 57;
	public static readonly INCR = 58;
	public static readonly DECR = 59;
	public static readonly ASSIGN = 60;
	public static readonly AADD = 61;
	public static readonly ASUB = 62;
	public static readonly AMUL = 63;
	public static readonly ADIV = 64;
	public static readonly AREM = 65;
	public static readonly AAND = 66;
	public static readonly AXOR = 67;
	public static readonly AOR = 68;
	public static readonly ALSH = 69;
	public static readonly ARSH = 70;
	public static readonly AUSH = 71;
	public static readonly OCTAL = 72;
	public static readonly HEX = 73;
	public static readonly INTEGER = 74;
	public static readonly DECIMAL = 75;
	public static readonly STRING = 76;
	public static readonly REGEX = 77;
	public static readonly TRUE = 78;
	public static readonly FALSE = 79;
	public static readonly NULL = 80;
	public static readonly TYPE = 81;
	public static readonly ID = 82;
	public static readonly DOTINTEGER = 83;
	public static readonly DOTID = 84;
	public static readonly AFTER_DOT = 1;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "AFTER_DOT",
	];

	public static readonly ruleNames: string[] = [
		"WS", "COMMENT", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "LP", "RP", "DOT", 
		"NSDOT", "COMMA", "SEMICOLON", "IF", "IN", "ELSE", "WHILE", "DO", "FOR", 
		"CONTINUE", "BREAK", "RETURN", "NEW", "TRY", "CATCH", "THROW", "THIS", 
		"INSTANCEOF", "BOOLNOT", "BWNOT", "MUL", "DIV", "REM", "ADD", "SUB", "LSH", 
		"RSH", "USH", "LT", "LTE", "GT", "GTE", "EQ", "EQR", "NE", "NER", "BWAND", 
		"XOR", "BWOR", "BOOLAND", "BOOLOR", "COND", "COLON", "ELVIS", "REF", "ARROW", 
		"FIND", "MATCH", "INCR", "DECR", "ASSIGN", "AADD", "ASUB", "AMUL", "ADIV", 
		"AREM", "AAND", "AXOR", "AOR", "ALSH", "ARSH", "AUSH", "OCTAL", "HEX", 
		"INTEGER", "DECIMAL", "STRING", "REGEX", "TRUE", "FALSE", "NULL", "TYPE", 
		"ID", "DOTINTEGER", "DOTID",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'{'", "'}'", "'['", "']'", "'('", "')'", 
		"'.'", "'?.'", "','", "';'", "'if'", "'in'", "'else'", "'while'", "'do'", 
		"'for'", "'continue'", "'break'", "'return'", "'new'", "'try'", "'catch'", 
		"'throw'", "'this'", "'instanceof'", "'!'", "'~'", "'*'", "'/'", "'%'", 
		"'+'", "'-'", "'<<'", "'>>'", "'>>>'", "'<'", "'<='", "'>'", "'>='", "'=='", 
		"'==='", "'!='", "'!=='", "'&'", "'^'", "'|'", "'&&'", "'||'", "'?'", 
		"':'", "'?:'", "'::'", "'->'", "'=~'", "'==~'", "'++'", "'--'", "'='", 
		"'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'^='", "'|='", "'<<='", 
		"'>>='", "'>>>='", undefined, undefined, undefined, undefined, undefined, 
		undefined, "'true'", "'false'", "'null'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "WS", "COMMENT", "LBRACK", "RBRACK", "LBRACE", "RBRACE", "LP", 
		"RP", "DOT", "NSDOT", "COMMA", "SEMICOLON", "IF", "IN", "ELSE", "WHILE", 
		"DO", "FOR", "CONTINUE", "BREAK", "RETURN", "NEW", "TRY", "CATCH", "THROW", 
		"THIS", "INSTANCEOF", "BOOLNOT", "BWNOT", "MUL", "DIV", "REM", "ADD", 
		"SUB", "LSH", "RSH", "USH", "LT", "LTE", "GT", "GTE", "EQ", "EQR", "NE", 
		"NER", "BWAND", "XOR", "BWOR", "BOOLAND", "BOOLOR", "COND", "COLON", "ELVIS", 
		"REF", "ARROW", "FIND", "MATCH", "INCR", "DECR", "ASSIGN", "AADD", "ASUB", 
		"AMUL", "ADIV", "AREM", "AAND", "AXOR", "AOR", "ALSH", "ARSH", "AUSH", 
		"OCTAL", "HEX", "INTEGER", "DECIMAL", "STRING", "REGEX", "TRUE", "FALSE", 
		"NULL", "TYPE", "ID", "DOTINTEGER", "DOTID",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(PainlessLexer._LITERAL_NAMES, PainlessLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return PainlessLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(PainlessLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "PainlessLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return PainlessLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return PainlessLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return PainlessLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return PainlessLexer.modeNames; }

	// @Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 30:
			return this.DIV_sempred(_localctx, predIndex);

		case 76:
			return this.REGEX_sempred(_localctx, predIndex);

		case 80:
			return this.TYPE_sempred(_localctx, predIndex);
		}
		return true;
	}
	private DIV_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return  SlashStrategy.slashIsRegex(localctx, this) === false ;
		}
		return true;
	}
	private REGEX_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 1:
			return  SlashStrategy.slashIsRegex(localctx, this) ;
		}
		return true;
	}
	private TYPE_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 2:
			return  Definition.isSimpleType(localctx, this) ;
		}
		return true;
	}

	private static readonly _serializedATNSegments: number = 2;
	private static readonly _serializedATNSegment0: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02V\u0257\b\x01" +
		"\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06" +
		"\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f" +
		"\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04" +
		"\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04" +
		"\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04" +
		"\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04" +
		"\"\t\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*" +
		"\t*\x04+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x04" +
		"3\t3\x044\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04" +
		"<\t<\x04=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04" +
		"E\tE\x04F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04" +
		"N\tN\x04O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x03\x02\x06" +
		"\x02\xAE\n\x02\r\x02\x0E\x02\xAF\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x07\x03\xB8\n\x03\f\x03\x0E\x03\xBB\v\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x07\x03\xC2\n\x03\f\x03\x0E\x03\xC5\v\x03\x03\x03" +
		"\x03\x03\x05\x03\xC9\n\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03" +
		"\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03" +
		"\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03" +
		"\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03" +
		"\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03 \x03" +
		"!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03$\x03%\x03%\x03%\x03&\x03&\x03" +
		"&\x03&\x03\'\x03\'\x03(\x03(\x03(\x03)\x03)\x03*\x03*\x03*\x03+\x03+\x03" +
		"+\x03,\x03,\x03,\x03,\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x03/\x03/\x03" +
		"0\x030\x031\x031\x032\x032\x032\x033\x033\x033\x034\x034\x035\x035\x03" +
		"6\x036\x036\x037\x037\x037\x038\x038\x038\x039\x039\x039\x03:\x03:\x03" +
		":\x03:\x03;\x03;\x03;\x03<\x03<\x03<\x03=\x03=\x03>\x03>\x03>\x03?\x03" +
		"?\x03?\x03@\x03@\x03@\x03A\x03A\x03A\x03B\x03B\x03B\x03C\x03C\x03C\x03" +
		"D\x03D\x03D\x03E\x03E\x03E\x03F\x03F\x03F\x03F\x03G\x03G\x03G\x03G\x03" +
		"H\x03H\x03H\x03H\x03H\x03I\x03I\x06I\u01B8\nI\rI\x0EI\u01B9\x03I\x05I" +
		"\u01BD\nI\x03J\x03J\x03J\x06J\u01C2\nJ\rJ\x0EJ\u01C3\x03J\x05J\u01C7\n" +
		"J\x03K\x03K\x03K\x07K\u01CC\nK\fK\x0EK\u01CF\vK\x05K\u01D1\nK\x03K\x05" +
		"K\u01D4\nK\x03L\x03L\x03L\x07L\u01D9\nL\fL\x0EL\u01DC\vL\x05L\u01DE\n" +
		"L\x03L\x03L\x06L\u01E2\nL\rL\x0EL\u01E3\x05L\u01E6\nL\x03L\x03L\x05L\u01EA" +
		"\nL\x03L\x06L\u01ED\nL\rL\x0EL\u01EE\x05L\u01F1\nL\x03L\x05L\u01F4\nL" +
		"\x03M\x03M\x03M\x03M\x03M\x03M\x07M\u01FC\nM\fM\x0EM\u01FF\vM\x03M\x03" +
		"M\x03M\x03M\x03M\x03M\x03M\x07M\u0208\nM\fM\x0EM\u020B\vM\x03M\x05M\u020E" +
		"\nM\x03N\x03N\x03N\x03N\x06N\u0214\nN\rN\x0EN\u0215\x03N\x03N\x07N\u021A" +
		"\nN\fN\x0EN\u021D\vN\x03N\x03N\x03O\x03O\x03O\x03O\x03O\x03P\x03P\x03" +
		"P\x03P\x03P\x03P\x03Q\x03Q\x03Q\x03Q\x03Q\x03R\x03R\x03R\x03R\x07R\u0235" +
		"\nR\fR\x0ER\u0238\vR\x03R\x03R\x03S\x03S\x07S\u023E\nS\fS\x0ES\u0241\v" +
		"S\x03T\x03T\x03T\x07T\u0246\nT\fT\x0ET\u0249\vT\x05T\u024B\nT\x03T\x03" +
		"T\x03U\x03U\x07U\u0251\nU\fU\x0EU\u0254\vU\x03U\x03U\x07\xB9\xC3\u01FD" +
		"\u0209\u0215\x02\x02V\x04\x02\x03\x06\x02\x04\b\x02\x05\n\x02\x06\f\x02" +
		"\x07\x0E\x02\b\x10\x02\t\x12\x02\n\x14\x02\v\x16\x02\f\x18\x02\r\x1A\x02" +
		"\x0E\x1C\x02\x0F\x1E\x02\x10 \x02\x11\"\x02\x12$\x02\x13&\x02\x14(\x02" +
		"\x15*\x02\x16,\x02\x17.\x02\x180\x02\x192\x02\x1A4\x02\x1B6\x02\x1C8\x02" +
		"\x1D:\x02\x1E<\x02\x1F>\x02 @\x02!B\x02\"D\x02#F\x02$H\x02%J\x02&L\x02" +
		"\'N\x02(P\x02)R\x02*T\x02+V\x02,X\x02-Z\x02.\\\x02/^\x020`\x021b\x022" +
		"d\x023f\x024h\x025j\x026l\x027n\x028p\x029r\x02:t\x02;v\x02<x\x02=z\x02" +
		">|\x02?~\x02@\x80\x02A\x82\x02B\x84\x02C\x86\x02D\x88\x02E\x8A\x02F\x8C" +
		"\x02G\x8E\x02H\x90\x02I\x92\x02J\x94\x02K\x96\x02L\x98\x02M\x9A\x02N\x9C" +
		"\x02O\x9E\x02P\xA0\x02Q\xA2\x02R\xA4\x02S\xA6\x02T\xA8\x02U\xAA\x02V\x04" +
		"\x02\x03\x15\x05\x02\v\f\x0F\x0F\"\"\x04\x02\f\f\x0F\x0F\x03\x0229\x04" +
		"\x02NNnn\x04\x02ZZzz\x05\x022;CHch\x03\x023;\x03\x022;\b\x02FFHHNNffh" +
		"hnn\x04\x02GGgg\x04\x02--//\x06\x02FFHHffhh\x04\x02$$^^\x04\x02))^^\x03" +
		"\x02\f\f\x04\x02\f\f11\t\x02WWeekknouuwwzz\x05\x02C\\aac|\x06\x022;C\\" +
		"aac|\x02\u0277\x02\x04\x03\x02\x02\x02\x02\x06\x03\x02\x02\x02\x02\b\x03" +
		"\x02\x02\x02\x02\n\x03\x02\x02\x02\x02\f\x03\x02\x02\x02\x02\x0E\x03\x02" +
		"\x02\x02\x02\x10\x03\x02\x02\x02\x02\x12\x03\x02\x02\x02\x02\x14\x03\x02" +
		"\x02\x02\x02\x16\x03\x02\x02\x02\x02\x18\x03\x02\x02\x02\x02\x1A\x03\x02" +
		"\x02\x02\x02\x1C\x03\x02\x02\x02\x02\x1E\x03\x02\x02\x02\x02 \x03\x02" +
		"\x02\x02\x02\"\x03\x02\x02\x02\x02$\x03\x02\x02\x02\x02&\x03\x02\x02\x02" +
		"\x02(\x03\x02\x02\x02\x02*\x03\x02\x02\x02\x02,\x03\x02\x02\x02\x02.\x03" +
		"\x02\x02\x02\x020\x03\x02\x02\x02\x022\x03\x02\x02\x02\x024\x03\x02\x02" +
		"\x02\x026\x03\x02\x02\x02\x028\x03\x02\x02\x02\x02:\x03\x02\x02\x02\x02" +
		"<\x03\x02\x02\x02\x02>\x03\x02\x02\x02\x02@\x03\x02\x02\x02\x02B\x03\x02" +
		"\x02\x02\x02D\x03\x02\x02\x02\x02F\x03\x02\x02\x02\x02H\x03\x02\x02\x02" +
		"\x02J\x03\x02\x02\x02\x02L\x03\x02\x02\x02\x02N\x03\x02\x02\x02\x02P\x03" +
		"\x02\x02\x02\x02R\x03\x02\x02\x02\x02T\x03\x02\x02\x02\x02V\x03\x02\x02" +
		"\x02\x02X\x03\x02\x02\x02\x02Z\x03\x02\x02\x02\x02\\\x03\x02\x02\x02\x02" +
		"^\x03\x02\x02\x02\x02`\x03\x02\x02\x02\x02b\x03\x02\x02\x02\x02d\x03\x02" +
		"\x02\x02\x02f\x03\x02\x02\x02\x02h\x03\x02\x02\x02\x02j\x03\x02\x02\x02" +
		"\x02l\x03\x02\x02\x02\x02n\x03\x02\x02\x02\x02p\x03\x02\x02\x02\x02r\x03" +
		"\x02\x02\x02\x02t\x03\x02\x02\x02\x02v\x03\x02\x02\x02\x02x\x03\x02\x02" +
		"\x02\x02z\x03\x02\x02\x02\x02|\x03\x02\x02\x02\x02~\x03\x02\x02\x02\x02" +
		"\x80\x03\x02\x02\x02\x02\x82\x03\x02\x02\x02\x02\x84\x03\x02\x02\x02\x02" +
		"\x86\x03\x02\x02\x02\x02\x88\x03\x02\x02\x02\x02\x8A\x03\x02\x02\x02\x02" +
		"\x8C\x03\x02\x02\x02\x02\x8E\x03\x02\x02\x02\x02\x90\x03\x02\x02\x02\x02" +
		"\x92\x03\x02\x02\x02\x02\x94\x03\x02\x02\x02\x02\x96\x03\x02\x02\x02\x02" +
		"\x98\x03\x02\x02\x02\x02\x9A\x03\x02\x02\x02\x02\x9C\x03\x02\x02\x02\x02" +
		"\x9E\x03\x02\x02\x02\x02\xA0\x03\x02\x02\x02\x02\xA2\x03\x02\x02\x02\x02" +
		"\xA4\x03\x02\x02\x02\x02\xA6\x03\x02\x02\x02\x03\xA8\x03\x02\x02\x02\x03" +
		"\xAA\x03\x02\x02\x02\x04\xAD\x03\x02\x02\x02\x06\xC8\x03\x02\x02\x02\b" +
		"\xCC\x03\x02\x02\x02\n\xCE\x03\x02\x02\x02\f\xD0\x03\x02\x02\x02\x0E\xD2" +
		"\x03\x02\x02\x02\x10\xD4\x03\x02\x02\x02\x12\xD6\x03\x02\x02\x02\x14\xD8" +
		"\x03\x02\x02\x02\x16\xDC\x03\x02\x02\x02\x18\xE1\x03\x02\x02\x02\x1A\xE3" +
		"\x03\x02\x02\x02\x1C\xE5\x03\x02\x02\x02\x1E\xE8\x03\x02\x02\x02 \xEB" +
		"\x03\x02\x02\x02\"\xF0\x03\x02\x02\x02$\xF6\x03\x02\x02\x02&\xF9\x03\x02" +
		"\x02\x02(\xFD\x03\x02\x02\x02*\u0106\x03\x02\x02\x02,\u010C\x03\x02\x02" +
		"\x02.\u0113\x03\x02\x02\x020\u0117\x03\x02\x02\x022\u011B\x03\x02\x02" +
		"\x024\u0121\x03\x02\x02\x026\u0127\x03\x02\x02\x028\u012C\x03\x02\x02" +
		"\x02:\u0137\x03\x02\x02\x02<\u0139\x03\x02\x02\x02>\u013B\x03\x02\x02" +
		"\x02@\u013D\x03\x02\x02\x02B\u0140\x03\x02\x02\x02D\u0142\x03\x02\x02" +
		"\x02F\u0144\x03\x02\x02\x02H\u0146\x03\x02\x02\x02J\u0149\x03\x02\x02" +
		"\x02L\u014C\x03\x02\x02\x02N\u0150\x03\x02\x02\x02P\u0152\x03\x02\x02" +
		"\x02R\u0155\x03\x02\x02\x02T\u0157\x03\x02\x02\x02V\u015A\x03\x02\x02" +
		"\x02X\u015D\x03\x02\x02\x02Z\u0161\x03\x02\x02\x02\\\u0164\x03\x02\x02" +
		"\x02^\u0168\x03\x02\x02\x02`\u016A\x03\x02\x02\x02b\u016C\x03\x02\x02" +
		"\x02d\u016E\x03\x02\x02\x02f\u0171\x03\x02\x02\x02h\u0174\x03\x02\x02" +
		"\x02j\u0176\x03\x02\x02\x02l\u0178\x03\x02\x02\x02n\u017B\x03\x02\x02" +
		"\x02p\u017E\x03\x02\x02\x02r\u0181\x03\x02\x02\x02t\u0184\x03\x02\x02" +
		"\x02v\u0188\x03\x02\x02\x02x\u018B\x03\x02\x02\x02z\u018E\x03\x02\x02" +
		"\x02|\u0190\x03\x02\x02\x02~\u0193\x03\x02\x02\x02\x80\u0196\x03\x02\x02" +
		"\x02\x82\u0199\x03\x02\x02\x02\x84\u019C\x03\x02\x02\x02\x86\u019F\x03" +
		"\x02\x02\x02\x88\u01A2\x03\x02\x02\x02\x8A\u01A5\x03\x02\x02\x02\x8C\u01A8" +
		"\x03\x02\x02\x02\x8E\u01AC\x03\x02\x02\x02\x90\u01B0\x03\x02\x02\x02\x92" +
		"\u01B5\x03\x02\x02\x02\x94\u01BE\x03\x02\x02\x02\x96\u01D0\x03\x02\x02" +
		"\x02\x98\u01DD\x03\x02\x02\x02\x9A\u020D\x03\x02\x02\x02\x9C\u020F\x03" +
		"\x02\x02\x02\x9E\u0220\x03\x02\x02\x02\xA0\u0225\x03\x02\x02\x02\xA2\u022B" +
		"\x03\x02\x02\x02\xA4\u0230\x03\x02\x02\x02\xA6\u023B\x03\x02\x02\x02\xA8" +
		"\u024A\x03\x02\x02\x02\xAA\u024E\x03\x02\x02\x02\xAC\xAE\t\x02\x02\x02" +
		"\xAD\xAC\x03\x02\x02\x02\xAE\xAF\x03\x02\x02\x02\xAF\xAD\x03\x02\x02\x02" +
		"\xAF\xB0\x03\x02\x02\x02\xB0\xB1\x03\x02\x02\x02\xB1\xB2\b\x02\x02\x02" +
		"\xB2\x05\x03\x02\x02\x02\xB3\xB4\x071\x02\x02\xB4\xB5\x071\x02\x02\xB5" +
		"\xB9\x03\x02\x02\x02\xB6\xB8\v\x02\x02\x02\xB7\xB6\x03\x02\x02\x02\xB8" +
		"\xBB\x03\x02\x02\x02\xB9\xBA\x03\x02\x02\x02\xB9\xB7\x03\x02\x02\x02\xBA" +
		"\xBC\x03\x02\x02\x02\xBB\xB9\x03\x02\x02\x02\xBC\xC9\t\x03\x02\x02\xBD" +
		"\xBE\x071\x02\x02\xBE\xBF\x07,\x02\x02\xBF\xC3\x03\x02\x02\x02\xC0\xC2" +
		"\v\x02\x02\x02\xC1\xC0\x03\x02\x02\x02\xC2\xC5\x03\x02\x02\x02\xC3\xC4" +
		"\x03\x02\x02\x02\xC3\xC1\x03\x02\x02\x02\xC4\xC6\x03\x02\x02\x02\xC5\xC3" +
		"\x03\x02\x02\x02\xC6\xC7\x07,\x02\x02\xC7\xC9\x071\x02\x02\xC8\xB3\x03" +
		"\x02\x02\x02\xC8\xBD\x03\x02\x02\x02\xC9\xCA\x03\x02\x02\x02\xCA\xCB\b" +
		"\x03\x02\x02\xCB\x07\x03\x02\x02\x02\xCC\xCD\x07}\x02\x02\xCD\t\x03\x02" +
		"\x02\x02\xCE\xCF\x07\x7F\x02\x02\xCF\v\x03\x02\x02\x02\xD0\xD1\x07]\x02" +
		"\x02\xD1\r\x03\x02\x02\x02\xD2\xD3\x07_\x02\x02\xD3\x0F\x03\x02\x02\x02" +
		"\xD4\xD5\x07*\x02\x02\xD5\x11\x03\x02\x02\x02\xD6\xD7\x07+\x02\x02\xD7" +
		"\x13\x03\x02\x02\x02\xD8\xD9\x070\x02\x02\xD9\xDA\x03\x02\x02\x02\xDA" +
		"\xDB\b\n\x03\x02\xDB\x15\x03\x02\x02\x02\xDC\xDD\x07A\x02\x02\xDD\xDE" +
		"\x070\x02\x02\xDE\xDF\x03\x02\x02\x02\xDF\xE0\b\v\x03\x02\xE0\x17\x03" +
		"\x02\x02\x02\xE1\xE2\x07.\x02\x02\xE2\x19\x03\x02\x02\x02\xE3\xE4\x07" +
		"=\x02\x02\xE4\x1B\x03\x02\x02\x02\xE5\xE6\x07k\x02\x02\xE6\xE7\x07h\x02" +
		"\x02\xE7\x1D\x03\x02\x02\x02\xE8\xE9\x07k\x02\x02\xE9\xEA\x07p\x02\x02" +
		"\xEA\x1F\x03\x02\x02\x02\xEB\xEC\x07g\x02\x02\xEC\xED\x07n\x02\x02\xED" +
		"\xEE\x07u\x02\x02\xEE\xEF\x07g\x02\x02\xEF!\x03\x02\x02\x02\xF0\xF1\x07" +
		"y\x02\x02\xF1\xF2\x07j\x02\x02\xF2\xF3\x07k\x02\x02\xF3\xF4\x07n\x02\x02" +
		"\xF4\xF5\x07g\x02\x02\xF5#\x03\x02\x02\x02\xF6\xF7\x07f\x02\x02\xF7\xF8" +
		"\x07q\x02\x02\xF8%\x03\x02\x02\x02\xF9\xFA\x07h\x02\x02\xFA\xFB\x07q\x02" +
		"\x02\xFB\xFC\x07t\x02\x02\xFC\'\x03\x02\x02\x02\xFD\xFE\x07e\x02\x02\xFE" +
		"\xFF\x07q\x02\x02\xFF\u0100\x07p\x02\x02\u0100\u0101\x07v\x02\x02\u0101" +
		"\u0102\x07k\x02\x02\u0102\u0103\x07p\x02\x02\u0103\u0104\x07w\x02\x02" +
		"\u0104\u0105\x07g\x02\x02\u0105)\x03\x02\x02\x02\u0106\u0107\x07d\x02" +
		"\x02\u0107\u0108\x07t\x02\x02\u0108\u0109\x07g\x02\x02\u0109\u010A\x07" +
		"c\x02\x02\u010A\u010B\x07m\x02\x02\u010B+\x03\x02\x02\x02\u010C\u010D" +
		"\x07t\x02\x02\u010D\u010E\x07g\x02\x02\u010E\u010F\x07v\x02\x02\u010F" +
		"\u0110\x07w\x02\x02\u0110\u0111\x07t\x02\x02\u0111\u0112\x07p\x02\x02" +
		"\u0112-\x03\x02\x02\x02\u0113\u0114\x07p\x02\x02\u0114\u0115\x07g\x02" +
		"\x02\u0115\u0116\x07y\x02\x02\u0116/\x03\x02\x02\x02\u0117\u0118\x07v" +
		"\x02\x02\u0118\u0119\x07t\x02\x02\u0119\u011A\x07{\x02\x02\u011A1\x03" +
		"\x02\x02\x02\u011B\u011C\x07e\x02\x02\u011C\u011D\x07c\x02\x02\u011D\u011E" +
		"\x07v\x02\x02\u011E\u011F\x07e\x02\x02\u011F\u0120\x07j\x02\x02\u0120" +
		"3\x03\x02\x02\x02\u0121\u0122\x07v\x02\x02\u0122\u0123\x07j\x02\x02\u0123" +
		"\u0124\x07t\x02\x02\u0124\u0125\x07q\x02\x02\u0125\u0126\x07y\x02\x02" +
		"\u01265\x03\x02\x02\x02\u0127\u0128\x07v\x02\x02\u0128\u0129\x07j\x02" +
		"\x02\u0129\u012A\x07k\x02\x02\u012A\u012B\x07u\x02\x02\u012B7\x03\x02" +
		"\x02\x02\u012C\u012D\x07k\x02\x02\u012D\u012E\x07p\x02\x02\u012E\u012F" +
		"\x07u\x02\x02\u012F\u0130\x07v\x02\x02\u0130\u0131\x07c\x02\x02\u0131" +
		"\u0132\x07p\x02\x02\u0132\u0133\x07e\x02\x02\u0133\u0134\x07g\x02\x02" +
		"\u0134\u0135\x07q\x02\x02\u0135\u0136\x07h\x02\x02\u01369\x03\x02\x02" +
		"\x02\u0137\u0138\x07#\x02\x02\u0138;\x03\x02\x02\x02\u0139\u013A\x07\x80" +
		"\x02\x02\u013A=\x03\x02\x02\x02\u013B\u013C\x07,\x02\x02\u013C?\x03\x02" +
		"\x02\x02\u013D\u013E\x071\x02\x02\u013E\u013F\x06 \x02\x02\u013FA\x03" +
		"\x02\x02\x02\u0140\u0141\x07\'\x02\x02\u0141C\x03\x02\x02\x02\u0142\u0143" +
		"\x07-\x02\x02\u0143E\x03\x02\x02\x02\u0144\u0145\x07/\x02\x02\u0145G\x03" +
		"\x02\x02\x02\u0146\u0147\x07>\x02\x02\u0147\u0148\x07>\x02\x02\u0148I" +
		"\x03\x02\x02\x02\u0149\u014A\x07@\x02\x02\u014A\u014B\x07@\x02\x02\u014B" +
		"K\x03\x02\x02\x02\u014C\u014D\x07@\x02\x02\u014D\u014E\x07@\x02\x02\u014E" +
		"\u014F\x07@\x02\x02\u014FM\x03\x02\x02\x02\u0150\u0151\x07>\x02\x02\u0151" +
		"O\x03\x02\x02\x02\u0152\u0153\x07>\x02\x02\u0153\u0154\x07?\x02\x02\u0154" +
		"Q\x03\x02\x02\x02\u0155\u0156\x07@\x02\x02\u0156S\x03\x02\x02\x02\u0157" +
		"\u0158\x07@\x02\x02\u0158\u0159\x07?\x02\x02\u0159U\x03\x02\x02\x02\u015A" +
		"\u015B\x07?\x02\x02\u015B\u015C\x07?\x02\x02\u015CW\x03\x02\x02\x02\u015D" +
		"\u015E\x07?\x02\x02\u015E\u015F\x07?\x02\x02\u015F\u0160\x07?\x02\x02" +
		"\u0160Y\x03\x02\x02\x02\u0161\u0162\x07#\x02\x02\u0162\u0163\x07?\x02" +
		"\x02\u0163[\x03\x02\x02\x02\u0164\u0165\x07#\x02\x02\u0165\u0166\x07?" +
		"\x02\x02\u0166\u0167\x07?\x02\x02\u0167]\x03\x02\x02\x02\u0168\u0169\x07" +
		"(\x02\x02\u0169_\x03\x02\x02\x02\u016A\u016B\x07`\x02\x02\u016Ba\x03\x02" +
		"\x02\x02\u016C\u016D\x07~\x02\x02\u016Dc\x03\x02\x02\x02\u016E\u016F\x07" +
		"(\x02\x02\u016F\u0170\x07(\x02\x02\u0170e\x03\x02\x02\x02\u0171\u0172" +
		"\x07~\x02\x02\u0172\u0173\x07~\x02\x02\u0173g\x03\x02\x02\x02\u0174\u0175" +
		"\x07A\x02\x02\u0175i\x03\x02\x02\x02\u0176\u0177\x07<\x02\x02\u0177k\x03" +
		"\x02\x02\x02\u0178\u0179\x07A\x02\x02\u0179\u017A\x07<\x02\x02\u017Am" +
		"\x03\x02\x02\x02\u017B\u017C\x07<\x02\x02\u017C\u017D\x07<\x02\x02\u017D" +
		"o\x03\x02\x02\x02\u017E\u017F\x07/\x02\x02\u017F\u0180\x07@\x02\x02\u0180" +
		"q\x03\x02\x02\x02\u0181\u0182\x07?\x02\x02\u0182\u0183\x07\x80\x02\x02" +
		"\u0183s\x03\x02\x02\x02\u0184\u0185\x07?\x02\x02\u0185\u0186\x07?\x02" +
		"\x02\u0186\u0187\x07\x80\x02\x02\u0187u\x03\x02\x02\x02\u0188\u0189\x07" +
		"-\x02\x02\u0189\u018A\x07-\x02\x02\u018Aw\x03\x02\x02\x02\u018B\u018C" +
		"\x07/\x02\x02\u018C\u018D\x07/\x02\x02\u018Dy\x03\x02\x02\x02\u018E\u018F" +
		"\x07?\x02\x02\u018F{\x03\x02\x02\x02\u0190\u0191\x07-\x02\x02\u0191\u0192" +
		"\x07?\x02\x02\u0192}\x03\x02\x02\x02\u0193\u0194\x07/\x02\x02\u0194\u0195" +
		"\x07?\x02\x02\u0195\x7F\x03\x02\x02\x02\u0196\u0197\x07,\x02\x02\u0197" +
		"\u0198\x07?\x02\x02\u0198\x81\x03\x02\x02\x02\u0199\u019A\x071\x02\x02" +
		"\u019A\u019B\x07?\x02\x02\u019B\x83\x03\x02\x02\x02\u019C\u019D\x07\'" +
		"\x02\x02\u019D\u019E\x07?\x02\x02\u019E\x85\x03\x02\x02\x02\u019F\u01A0" +
		"\x07(\x02\x02\u01A0\u01A1\x07?\x02\x02\u01A1\x87\x03\x02\x02\x02\u01A2" +
		"\u01A3\x07`\x02\x02\u01A3\u01A4\x07?\x02\x02\u01A4\x89\x03\x02\x02\x02" +
		"\u01A5\u01A6\x07~\x02\x02\u01A6\u01A7\x07?\x02\x02\u01A7\x8B\x03\x02\x02" +
		"\x02\u01A8\u01A9\x07>\x02\x02\u01A9\u01AA\x07>\x02\x02\u01AA\u01AB\x07" +
		"?\x02\x02\u01AB\x8D\x03\x02\x02\x02\u01AC\u01AD\x07@\x02\x02\u01AD\u01AE" +
		"\x07@\x02\x02\u01AE\u01AF\x07?\x02\x02\u01AF\x8F\x03\x02\x02\x02\u01B0" +
		"\u01B1\x07@\x02\x02\u01B1\u01B2\x07@\x02\x02\u01B2\u01B3\x07@\x02\x02" +
		"\u01B3\u01B4\x07?\x02\x02\u01B4\x91\x03\x02\x02\x02\u01B5\u01B7\x072\x02" +
		"\x02\u01B6\u01B8\t\x04\x02\x02\u01B7\u01B6\x03\x02\x02\x02\u01B8\u01B9" +
		"\x03\x02\x02\x02\u01B9\u01B7\x03\x02\x02\x02\u01B9\u01BA\x03\x02\x02\x02" +
		"\u01BA\u01BC\x03\x02\x02\x02\u01BB\u01BD\t\x05\x02\x02\u01BC\u01BB\x03" +
		"\x02\x02\x02\u01BC\u01BD\x03\x02\x02\x02\u01BD\x93\x03\x02\x02\x02\u01BE" +
		"\u01BF\x072\x02\x02\u01BF\u01C1\t\x06\x02\x02\u01C0\u01C2\t\x07\x02\x02" +
		"\u01C1\u01C0\x03\x02\x02\x02\u01C2\u01C3\x03\x02\x02\x02\u01C3\u01C1\x03" +
		"\x02\x02\x02\u01C3\u01C4\x03\x02\x02\x02\u01C4\u01C6\x03\x02\x02\x02\u01C5" +
		"\u01C7\t\x05\x02\x02\u01C6\u01C5\x03\x02\x02\x02\u01C6\u01C7\x03\x02\x02" +
		"\x02\u01C7\x95\x03\x02\x02\x02\u01C8\u01D1\x072\x02\x02\u01C9\u01CD\t" +
		"\b\x02\x02\u01CA\u01CC\t\t\x02\x02\u01CB\u01CA\x03\x02\x02\x02\u01CC\u01CF" +
		"\x03\x02\x02\x02\u01CD\u01CB\x03\x02\x02\x02\u01CD\u01CE\x03\x02\x02\x02" +
		"\u01CE\u01D1\x03\x02\x02\x02\u01CF\u01CD\x03\x02\x02\x02\u01D0\u01C8\x03" +
		"\x02\x02\x02\u01D0\u01C9\x03\x02\x02\x02\u01D1\u01D3\x03\x02\x02\x02\u01D2" +
		"\u01D4\t\n\x02\x02\u01D3\u01D2\x03\x02\x02\x02\u01D3\u01D4\x03\x02\x02" +
		"\x02\u01D4\x97\x03\x02\x02\x02\u01D5\u01DE\x072\x02\x02\u01D6\u01DA\t" +
		"\b\x02\x02\u01D7\u01D9\t\t\x02\x02\u01D8\u01D7\x03\x02\x02\x02\u01D9\u01DC" +
		"\x03\x02\x02\x02\u01DA\u01D8\x03\x02\x02\x02\u01DA\u01DB\x03\x02\x02\x02" +
		"\u01DB\u01DE\x03\x02\x02\x02\u01DC\u01DA\x03\x02\x02\x02\u01DD\u01D5\x03" +
		"\x02\x02\x02\u01DD\u01D6\x03\x02\x02\x02\u01DE\u01E5\x03\x02\x02\x02\u01DF" +
		"\u01E1\x05\x14\n\x02\u01E0\u01E2\t\t\x02\x02\u01E1\u01E0\x03\x02\x02\x02" +
		"\u01E2\u01E3\x03\x02\x02\x02\u01E3\u01E1\x03\x02\x02\x02\u01E3\u01E4\x03" +
		"\x02\x02\x02\u01E4\u01E6\x03\x02\x02\x02\u01E5\u01DF\x03\x02\x02\x02\u01E5" +
		"\u01E6\x03\x02\x02\x02\u01E6\u01F0\x03\x02\x02\x02\u01E7\u01E9\t\v\x02" +
		"\x02\u01E8\u01EA\t\f\x02\x02\u01E9\u01E8\x03\x02\x02\x02\u01E9\u01EA\x03" +
		"\x02\x02\x02\u01EA\u01EC\x03\x02\x02\x02\u01EB\u01ED\t\t\x02\x02\u01EC" +
		"\u01EB\x03\x02\x02\x02\u01ED\u01EE\x03\x02\x02\x02\u01EE\u01EC\x03\x02" +
		"\x02\x02\u01EE\u01EF\x03\x02\x02\x02\u01EF\u01F1\x03\x02\x02\x02\u01F0" +
		"\u01E7\x03\x02\x02\x02\u01F0\u01F1\x03\x02\x02\x02\u01F1\u01F3\x03\x02" +
		"\x02\x02\u01F2\u01F4\t\r\x02\x02\u01F3\u01F2\x03\x02\x02\x02\u01F3\u01F4" +
		"\x03\x02\x02\x02\u01F4\x99\x03\x02\x02\x02\u01F5\u01FD\x07$\x02\x02\u01F6" +
		"\u01F7\x07^\x02\x02\u01F7\u01FC\x07$\x02\x02\u01F8\u01F9\x07^\x02\x02" +
		"\u01F9\u01FC\x07^\x02\x02\u01FA\u01FC\n\x0E\x02\x02\u01FB\u01F6\x03\x02" +
		"\x02\x02\u01FB\u01F8\x03\x02\x02\x02\u01FB\u01FA\x03\x02\x02\x02\u01FC" +
		"\u01FF\x03\x02\x02\x02\u01FD\u01FE\x03\x02\x02\x02\u01FD\u01FB\x03\x02" +
		"\x02\x02\u01FE\u0200\x03\x02\x02\x02\u01FF\u01FD\x03\x02\x02\x02\u0200" +
		"\u020E\x07$\x02\x02\u0201\u0209\x07)\x02\x02\u0202\u0203\x07^\x02\x02" +
		"\u0203\u0208\x07)\x02\x02\u0204\u0205\x07^\x02\x02\u0205\u0208\x07^\x02" +
		"\x02\u0206\u0208\n\x0F\x02\x02\u0207\u0202\x03\x02\x02\x02\u0207\u0204" +
		"\x03\x02\x02\x02\u0207\u0206\x03\x02\x02\x02\u0208\u020B\x03\x02\x02\x02" +
		"\u0209\u020A\x03\x02\x02\x02\u0209\u0207\x03\x02\x02\x02\u020A\u020C\x03" +
		"\x02\x02\x02\u020B\u0209\x03\x02\x02\x02\u020C\u020E\x07)\x02\x02\u020D" +
		"\u01F5\x03\x02\x02\x02\u020D\u0201\x03\x02\x02\x02\u020E\x9B\x03\x02\x02" +
		"\x02\u020F\u0213\x071\x02\x02\u0210\u0211\x07^\x02\x02\u0211\u0214\n\x10" +
		"\x02\x02\u0212\u0214\n\x11\x02\x02\u0213\u0210\x03\x02\x02\x02\u0213\u0212" +
		"\x03\x02\x02\x02\u0214\u0215\x03\x02\x02\x02\u0215\u0216\x03\x02\x02\x02" +
		"\u0215";
	private static readonly _serializedATNSegment1: string =
		"\u0213\x03\x02\x02\x02\u0216\u0217\x03\x02\x02\x02\u0217\u021B\x071\x02" +
		"\x02\u0218\u021A\t\x12\x02\x02\u0219\u0218\x03\x02\x02\x02\u021A\u021D" +
		"\x03\x02\x02\x02\u021B\u0219\x03\x02\x02\x02\u021B\u021C\x03\x02\x02\x02" +
		"\u021C\u021E\x03\x02\x02\x02\u021D\u021B\x03\x02\x02\x02\u021E\u021F\x06" +
		"N\x03\x02\u021F\x9D\x03\x02\x02\x02\u0220\u0221\x07v\x02\x02\u0221\u0222" +
		"\x07t\x02\x02\u0222\u0223\x07w\x02\x02\u0223\u0224\x07g\x02\x02\u0224" +
		"\x9F\x03\x02\x02\x02\u0225\u0226\x07h\x02\x02\u0226\u0227\x07c\x02\x02" +
		"\u0227\u0228\x07n\x02\x02\u0228\u0229\x07u\x02\x02\u0229\u022A\x07g\x02" +
		"\x02\u022A\xA1\x03\x02\x02\x02\u022B\u022C\x07p\x02\x02\u022C\u022D\x07" +
		"w\x02\x02\u022D\u022E\x07n\x02\x02\u022E\u022F\x07n\x02\x02\u022F\xA3" +
		"\x03\x02\x02\x02\u0230\u0236\x05\xA6S\x02\u0231\u0232\x05\x14\n\x02\u0232" +
		"\u0233\x05\xA6S\x02\u0233\u0235\x03\x02\x02\x02\u0234\u0231\x03\x02\x02" +
		"\x02\u0235\u0238\x03\x02\x02\x02\u0236\u0234\x03\x02\x02\x02\u0236\u0237" +
		"\x03\x02\x02\x02\u0237\u0239\x03\x02\x02\x02\u0238\u0236\x03\x02\x02\x02" +
		"\u0239\u023A\x06R\x04\x02\u023A\xA5\x03\x02\x02\x02\u023B\u023F\t\x13" +
		"\x02\x02\u023C\u023E\t\x14\x02\x02\u023D\u023C\x03\x02\x02\x02\u023E\u0241" +
		"\x03\x02\x02\x02\u023F\u023D\x03\x02\x02\x02\u023F\u0240\x03\x02\x02\x02" +
		"\u0240\xA7\x03\x02\x02\x02\u0241\u023F\x03\x02\x02\x02\u0242\u024B\x07" +
		"2\x02\x02\u0243\u0247\t\b\x02\x02\u0244\u0246\t\t\x02\x02\u0245\u0244" +
		"\x03\x02\x02\x02\u0246\u0249\x03\x02\x02\x02\u0247\u0245\x03\x02\x02\x02" +
		"\u0247\u0248\x03\x02\x02\x02\u0248\u024B\x03\x02\x02\x02\u0249\u0247\x03" +
		"\x02\x02\x02\u024A\u0242\x03\x02\x02\x02\u024A\u0243\x03\x02\x02\x02\u024B" +
		"\u024C\x03\x02\x02\x02\u024C\u024D\bT\x04\x02\u024D\xA9\x03\x02\x02\x02" +
		"\u024E\u0252\t\x13\x02\x02\u024F\u0251\t\x14\x02\x02\u0250\u024F\x03\x02" +
		"\x02\x02\u0251\u0254\x03\x02\x02\x02\u0252\u0250\x03\x02\x02\x02\u0252" +
		"\u0253\x03\x02\x02\x02\u0253\u0255\x03\x02\x02\x02\u0254\u0252\x03\x02" +
		"\x02\x02\u0255\u0256\bU\x04\x02\u0256\xAB\x03\x02\x02\x02$\x02\x03\xAF" +
		"\xB9\xC3\xC8\u01B9\u01BC\u01C3\u01C6\u01CD\u01D0\u01D3\u01DA\u01DD\u01E3" +
		"\u01E5\u01E9\u01EE\u01F0\u01F3\u01FB\u01FD\u0207\u0209\u020D\u0213\u0215" +
		"\u021B\u0236\u023F\u0247\u024A\u0252\x05\b\x02\x02\x04\x03\x02\x04\x02" +
		"\x02";
	public static readonly _serializedATN: string = Utils.join(
		[
			PainlessLexer._serializedATNSegment0,
			PainlessLexer._serializedATNSegment1,
		],
		"",
	);
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!PainlessLexer.__ATN) {
			PainlessLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(PainlessLexer._serializedATN));
		}

		return PainlessLexer.__ATN;
	}

}

